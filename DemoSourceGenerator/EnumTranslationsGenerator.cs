using System.Text;

namespace DemoSourceGenerator;

public class EnumTranslationsGenerator
{
   public static readonly EnumTranslationsGenerator Instance = new();

   public string Generate(EnumTranslationInfo translationsInfo)
   {
      var ns = translationsInfo.Namespace;
      var name = translationsInfo.Name;

      var sb = new StringBuilder(@$"// <auto-generated />
#nullable enable

{(ns is null ? null : $@"namespace {ns};
")}");

      GenerateTranslationAttributes(sb, translationsInfo.Translations);

      sb.Append(@$"
partial class {name}
{{
}}
");

      return sb.ToString();
   }

   private static void GenerateTranslationAttributes(
      StringBuilder sb,
      IReadOnlyDictionary<string, string> translations)
   {
      foreach (var kvp in translations.OrderBy(kvp => kvp.Key))
      {
         sb.Append(@"
[global::DemoLibrary.TranslationAttribute(""").Append(kvp.Key).Append("\", \"").Append(kvp.Value).Append("\")]");
      }
   }
}
